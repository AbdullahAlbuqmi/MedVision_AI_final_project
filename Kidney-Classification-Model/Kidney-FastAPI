{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"PalI7B9popgR","executionInfo":{"status":"error","timestamp":1761504512384,"user_tz":-180,"elapsed":14372,"user":{"displayName":"خالد الخبراني","userId":"10840947853878309606"}},"outputId":"021c2dbf-decb-423f-8ed5-177390bfb368","colab":{"base_uri":"https://localhost:8080/","height":211}},"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"Model file not found at Kidney_CT_Classifier_clean_dense.h5","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-3605214661.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_model_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 30\u001b[0;31m     \u001b[0;32mraise\u001b[0m \u001b[0mFileNotFoundError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Model file not found at {local_model_path}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     31\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m \u001b[0;31m# Load model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: Model file not found at Kidney_CT_Classifier_clean_dense.h5"]}],"source":["from fastapi import FastAPI, UploadFile, File, HTTPException\n","from fastapi.responses import JSONResponse\n","from fastapi.middleware.cors import CORSMiddleware\n","import numpy as np\n","from PIL import Image\n","import tensorflow as tf\n","import io\n","import os\n","\n","# FastAPI app initialization\n","app = FastAPI(\n","    title=\"AI Medical Assistant - Kidney CT Classifier\",\n","    description=\"Upload a kidney CT image and get predictions from AI\",\n","    version=\"1.0\"\n",")\n","\n","# Allow CORS\n","app.add_middleware(\n","    CORSMiddleware,\n","    allow_origins=[\"*\"],\n","    allow_credentials=True,\n","    allow_methods=[\"*\"],\n","    allow_headers=[\"*\"],\n",")\n","\n","# Model Handling (local only)\n","local_model_path = 'Kidney_CT_Classifier_clean_dense.h5'\n","\n","if not os.path.exists(local_model_path):\n","    raise FileNotFoundError(f\"Model file not found at {local_model_path}\")\n","\n","# Load model\n","model = tf.keras.models.load_model(local_model_path)\n","class_names = [\"Normal\", \"Stone\"]\n","\n","# Helper function\n","def preprocess_image(image_bytes):\n","    img = Image.open(io.BytesIO(image_bytes)).convert(\"L\")  # grayscale\n","    img = img.resize((224, 224))\n","    img_array = np.array(img, dtype=np.float32) / 255.0\n","    img_array = np.expand_dims(img_array, axis=(0, -1))  # (1,224,224,1)\n","    return img_array\n","\n","# Prediction Endpoint\n","@app.post(\"/predict\")\n","async def predict_kidney(file: UploadFile = File(...)):\n","    if file.content_type not in [\"image/jpeg\", \"image/png\", \"image/jpg\"]:\n","        raise HTTPException(status_code=400, detail=\"Invalid file type. Only jpg/png allowed.\")\n","\n","    image_bytes = await file.read()\n","    img_array = preprocess_image(image_bytes)\n","\n","    predictions = model.predict(img_array)\n","    pred_idx = int(np.argmax(predictions))\n","    predicted_class = class_names[pred_idx]\n","    confidence = float(np.max(predictions)) * 100\n","\n","    response = {\n","        \"prediction\": predicted_class,\n","        \"confidence\": f\"{confidence:.2f}%\",\n","        \"message\": \"Normal kidney\" if predicted_class == \"Normal\" else \"Possible kidney stone detected\"\n","    }\n","\n","    return JSONResponse(content=response)\n","\n","# Root Endpoint\n","@app.get(\"/\")\n","def read_root():\n","    return {\"message\": \"Welcome to AI Medical Assistant - Kidney CT Classifier\"}\n","\n"]}]}